#! /usr/bin/env sh

report() {
awk '
function reportlevel(lev, iparray)
{
  time=gensub(pat[lev], "\\1", 1, $1);
  if (timeguard[lev] != time)
    {
    timeguard[lev]=time;
    for (i in iparray)
      {
      if (iparray[i] >= limit[lev] && !(i in reported))
        {
        printf ("client %s count %d (threshold %d/%s)\n", i, iparray[i], limit[lev], text[lev]);
        fflush();
        reported[i] = "";
        }
      delete iparray[i];
      }
    return 1;
    }
  return 0;
}
BEGIN {
pat[0] = "^(..:..:..)(.*)$"; text[0]="second";     limit[0]=10000;
pat[1] = "^(..:..:.)(.*)$";  text[1]="tenseconds"; limit[1]=20000;
pat[2] = "^(..:..)(.*)$";    text[2]="minute";     limit[2]=30000;
pat[3] = "^(..:.)(.*)$";     text[3]="tenminutes"; limit[3]=40000;
pat[4] = "^(..)(.*)$";       text[4]="hour";       limit[4]=50000;
if (0) # set it true to debug
  for (i=0; i<5; i++)
    limit[i] /= 2000;
}
/^[0-2][0-9]:.* > .*\.123: / {
  ip=gensub(/^(.*)(\.[^.]*)$/, "\\1", 1, $3)
  if (reportlevel(0,  sec) &&
      reportlevel(1, tsec) &&
      reportlevel(2,  min) &&
      reportlevel(3, tmin) &&
      reportlevel(4, hour)) for (i in reported) delete reported[i];
   sec[ip]++;
  tsec[ip]++;
   min[ip]++;
  tmin[ip]++;
  hour[ip]++;
}' "$@"
}

getlocalips() {
  ip addr show scope global |
  awk '$1 ~ /^inet/ { ip = gensub(/^([^/]*).*$/, "\\1", 1, $2);
    if ( iplist == "" ) iplist = "(" ip ; else iplist = iplist " or " ip; }
  END {print iplist ")" }'
}

packets() {
  tcpdump -pUnni any dst port ntp and dst host "`getlocalips`" 2> /dev/null &
  PID=$!
  echo $PID > $PIDFILE
  if [[ "$PERIOD" -ne 0 ]] ;then
    sleep $PERIOD
    kill $PID
  fi
}

PATH=$PATH:/usr/sbin
unset LANG

PERIOD=0
# Set it non-zero to debug
# PERIOD=300
# PERIOD=3600

PIDFILE=$0.pid

packets 2<> /dev/null < /dev/null |
report  2<> /dev/null |
logger -i -t ntpflood 2<> /dev/null > /dev/null &
